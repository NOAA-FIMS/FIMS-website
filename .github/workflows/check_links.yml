name: Check for Broken Links

# This action will run whenever you push new code to your main branch
on:
  push:
    branches:
      - main
  # You can also run it on a schedule (e.g., every Monday at 1 AM)
  # schedule:
  #   - cron: '0 1 * * 1'

jobs:
  link-checker:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up and build quarto site
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Build Quarto Site
        run: quarto render

      # Step 3: Run the broken link checker
      - name: Check for broken links
        id: lychee
        uses: lycheeverse/lychee-action@v1.9.3
        with:
          args: .

      # Step 4: Add a summary report to the workflow run
      # This step makes the output of the link checker easy to read
      - name: Fail if there are broken links that produce 404 errors
        run: |
          echo "${{ steps.lychee.outputs.summary }}" > lychee-summary.txt
          echo "## ðŸš¨ Broken Links: HTTP 404 Only" >> $GITHUB_STEP_SUMMARY
          if grep -q '404' lychee-summary.txt; then
            grep '404' lychee-summary.txt >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "No 404s found." >> $GITHUB_STEP_SUMMARY
          fi
      
      # # Step 5: Create an issue from the output of the 
      # - name: Create issue from link output
      #   if: steps.lychee.outputs.exit_code != 0
      #   uses: peter-evans/create-issue-from-file@v4
      #   with:
      #     title: Link Checker Report
      #     content-filepath: ./lychee/out.md