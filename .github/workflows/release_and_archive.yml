on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

name: Release and archive new release

jobs:
  release_and_archive::
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # Checkout the repo
      - uses: actions/checkout@v4

      # Set up Node (for Quarto, if needed; remove if not using Quarto)
      - uses: quarto-dev/quarto-actions/setup@v2
      
      # Fetch the latest release tag from NOAA-FIMS/FIMS
      - name: Get latest FIMS release tag
        id: get_fims_release
        run: |
          LATEST_TAG=$(curl --silent "https://api.github.com/repos/NOAA-FIMS/FIMS/releases/latest" | jq -r .tag_name)
          echo "Latest FIMS tag: $LATEST_TAG"
          echo "fims_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

     # Replace version number in index.qmd
      - name: Update version in index.qmd
        run: |
          # Remove leading 'v' from tag if present
          VERSION=$(echo "${{ steps.get_fims_release.outputs.fims_tag }}" | sed 's/^v//')
          # Replace the version string (assumes only one Version ... line present)
          sed -i -E "s/Version [0-9]+\.[0-9]+\.[0-9]+/Version $VERSION/" index.qmd

      - name: Render site
        run: quarto render
          
      # Archive current site to archives/<latest tag>
      - name: Archive current site
        run: |
          mkdir -p archives/${{ steps.get_fims_release.outputs.fims_tag }}
          cp -r docs/* archives/${{ steps.get_fims_release.outputs.fims_tag }}/
          
      - name: Add and commit everything
          git add .
          git commit -m "Release and archive website" || echo "No changes to commit"

      # Commit and push archive
      - name: Push archive
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      # Create a release with the same tag as the FIMS repo
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_fims_release.outputs.fims_tag }}
          name: Release ${{ steps.get_fims_release.outputs.fims_tag }}
          body: |
            Website release synced with FIMS ${{ steps.get_fims_release.outputs.fims_tag }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
          path: docs
          render: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}